package cn.kevenpotter.designpatterns.chainOfResonsibility;

/**
 * 概念：使多个对象都有机会处理请求，从而避免了请求的发送者和接收者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有对象处理它为止。
 * <p>
 * 职责：
 * 1.定义一个请求的处理方法handleMessage，唯一对外开放的方法；
 * 2.定义一个链的编排方法setNext，设置下一个处理者；
 * 3.定义了具体的请求者必须实现的两个方法：定义自己能够处理的级别getHandlerLevel和具体的处理任务echo。
 * <p>
 * 优点：
 * 1.请求和处理分开。请求者可以不用知道是谁处理的，处理者可以不用知道请求的全貌。两者解耦，提高系统的灵活性。
 * 2.请求者和接收者松散耦合
 * 3.动态组合职责
 * 缺点：
 * 1.性能问题，每个请求都是从链头遍历到链尾，特别是在链比较长的时候，性能是一个非常大的问题。
 * 2.调试不是很方便，特别是链条比较长，环节比较多的时候，由于采用了类似递归的方式，调试的时候逻辑可能比较复杂。
 * 3.产生很多细粒度对象
 * 4.不一定能被处理
 * <p>
 * 职责链模式的本质：分离职责，动态组合
 */
public class Overview {
}
